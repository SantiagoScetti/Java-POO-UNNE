#BlueJ class context
comment0.target=Cliente
comment0.text=\r\n\ La\ clase\ {@code\ Cliente}\ representa\ un\ cliente\ de\ un\ sistema\ bancario.\r\n\ Permite\ gestionar\ los\ datos\ personales\ y\ el\ saldo\ de\ un\ cliente.\r\n\r\n\ @author\ Santi\r\n\ @version\ 1.0\r\n
comment1.params=p_dni\ p_apellido\ p_nombre\ p_importe
comment1.target=Cliente(int,\ java.lang.String,\ java.lang.String,\ double)
comment1.text=\r\n\ Constructor\ de\ clase\ Cliente\ con\ los\ datos\ proporcionados.\r\n\r\n\ @param\ p_dni\ El\ n\u00FAmero\ de\ DNI\ del\ cliente.\r\n\ @param\ p_apellido\ El\ apellido\ del\ cliente.\r\n\ @param\ p_nombre\ El\ nombre\ del\ cliente.\r\n\ @param\ p_importe\ El\ saldo\ inicial\ del\ cliente.\r\n
comment10.params=p_importe
comment10.target=void\ agregaSaldo(double)
comment10.text=\r\n\ \ El\ m\u00E9todo\ {@code\ agregaSaldo()}\ a\u00F1ade\ o\ resta\ saldo\ al\ cliente.\r\n\ @param\ p_importe\ La\ cantidad\ a\ agregar\ o\ restar\ al\ saldo.\r\n
comment11.params=p_importe
comment11.target=void\ nuevoSaldo(double)
comment11.text=\r\n\ @param\ p_importe\ La\ cantidad\ nueva\ que\ se\ asignar\u00E1\ a\ saldo.\r\n
comment12.params=
comment12.target=void\ mostrar()
comment12.text=\r\n\ Muestra\ la\ informaci\u00F3n\ completa\ del\ cliente,\ incluyendo\ nombre,\ apellido,\r\n\ DNI\ y\ saldo.\r\n
comment2.params=p_dni
comment2.target=void\ setNroDni(int)
comment3.params=p_apellido
comment3.target=void\ setApellido(java.lang.String)
comment4.params=p_nombre
comment4.target=void\ setNombre(java.lang.String)
comment5.params=p_importe
comment5.target=void\ setSaldo(double)
comment6.params=
comment6.target=int\ getNroDni()
comment6.text=\r\n\ @return\ El\ n\u00FAmero\ de\ DNI\ del\ cliente.\r\n
comment7.params=
comment7.target=java.lang.String\ getApellido()
comment8.params=
comment8.target=java.lang.String\ getNombre()
comment9.params=
comment9.target=double\ getSaldo()
comment9.text=\r\n\ Devuelve\ el\ saldo\ actual\ del\ cliente.\r\n\ \r\n\ @return\ El\ saldo\ actual.\r\n
numComments=13
